#!{{ lookPath "bash" }}

set -eufo pipefail

echo '
 █████╗  ██████╗ ██╗   ██╗ █████╗ 
██╔══██╗██╔═══██╗██║   ██║██╔══██╗
███████║██║   ██║██║   ██║███████║
██╔══██║██║▄▄ ██║██║   ██║██╔══██║
██║  ██║╚██████╔╝╚██████╔╝██║  ██║
╚═╝  ╚═╝ ╚══▀▀═╝  ╚═════╝ ╚═╝  ╚═╝
'

magenta='\033[0;35m'
cyan='\033[0;36m'
clear='\033[0m'

# renovate: depName=aquaproj/aqua datasource=github-releases
_aqua_latest_version=v2.4.1

# renovate: depName=aquaproj/aqua-installer datasource=github-releases
_aqua_installer_version=v2.1.1

if command -v aqua; then
  _aqua_current="$(aqua -v | head -n1 | cut -d" " -f3 | sed "s/^/v/")"
else
  _aqua_current="none"
fi

printf "\n${cyan}💧 aqua${clear}\n---\n${magenta} - latest: %s\n - current: %s${clear}\n\n" "${_aqua_latest_version}" "${_aqua_current}"

if [[ ! $(command -v aqua) ]]; then
  # ensure AQUA vars are set
  function setenv() { export "$1=$2"; }
  eval "$(grep AQUA < ${HOME}/.setenv)"

  pushd "$(mktemp -d)"
  _aqua_installer="aqua-installer"

  # renovate: depName=aquaproj/aqua-installer datasource=github-releases
  _aqua_installer_version="v2.1.1"
  _aqua_installer_sha256sum="c2af02bdd15da6794f9c98db40332c804224930212f553a805425441f8331665"

  curl -sSfL "https://raw.githubusercontent.com/aquaproj/aqua-installer/${_aqua_installer_version}/aqua-installer" \
    -o "${_aqua_installer}"
  echo "${_aqua_installer_sha256sum}  ${_aqua_installer}" | sha256sum -c
  chmod +x "${_aqua_installer}"
  "./${_aqua_installer}"

  # ensure aqua is in path
  eval "$(grep AQUA < ${HOME}/.bashrc)"

  popd
elif [[ "${_aqua_latest_version}" != "${_aqua_current}" ]]; then
  aqua update-aqua
else
  printf "\n${cyan}💧 ${magenta}%s${clear}\n\n" " aqua installed and up to date"
fi

printf "\n${cyan}💧 ${magenta}%s${clear}\n\n" "ensure all aqua packages installed"

# .config/aqua/aqua.yaml hash: {{ include "aqua.yaml" | sha256sum }}
aqua install --all

printf "\n${cyan}💧 ${magenta}%s${clear}\n\n" "aqua done"

# vi: ft=bash
