#!/usr/bin/env bash

set -e

# Colors
# red='\033[0;31m'
# green='\033[0;32m'
# blue='\033[0;34m'
magenta='\033[0;35m'
cyan='\033[0;36m'
yellow='\033[0;33m'
clear='\033[0m'
print_info() { printf "\n${yellow}⚡ ${magenta}%s${clear}\n" "${@}"; echo; }
print_success() { printf "\n${cyan}🎉 %s${clear}\n\n" "${@}"; echo; }
# print_err() { printf "\n${red}💥 %s${clear}\n\n" "${@}"; }
print_warn() { printf "\n${yellow}⚠  %s${clear}\n\n" "${@}"; echo; }

echo '
██╗  ██╗██╗    ██╗ █████╗ ██╗   ██╗██╗      █████╗ ███╗   ██╗██████╗       ███████╗ █████╗ ████████╗███████╗██╗     ██╗     ██╗████████╗███████╗
╚██╗██╔╝██║    ██║██╔══██╗╚██╗ ██╔╝██║     ██╔══██╗████╗  ██║██╔══██╗      ██╔════╝██╔══██╗╚══██╔══╝██╔════╝██║     ██║     ██║╚══██╔══╝██╔════╝
 ╚███╔╝ ██║ █╗ ██║███████║ ╚████╔╝ ██║     ███████║██╔██╗ ██║██║  ██║█████╗███████╗███████║   ██║   █████╗  ██║     ██║     ██║   ██║   █████╗  
 ██╔██╗ ██║███╗██║██╔══██║  ╚██╔╝  ██║     ██╔══██║██║╚██╗██║██║  ██║╚════╝╚════██║██╔══██║   ██║   ██╔══╝  ██║     ██║     ██║   ██║   ██╔══╝  
██╔╝ ██╗╚███╔███╔╝██║  ██║   ██║   ███████╗██║  ██║██║ ╚████║██████╔╝      ███████║██║  ██║   ██║   ███████╗███████╗███████╗██║   ██║   ███████╗
╚═╝  ╚═╝ ╚══╝╚══╝ ╚═╝  ╚═╝   ╚═╝   ╚══════╝╚═╝  ╚═╝╚═╝  ╚═══╝╚═════╝       ╚══════╝╚═╝  ╚═╝   ╚═╝   ╚══════╝╚══════╝╚══════╝╚═╝   ╚═╝   ╚══════╝
'

{{ $gitDir := joinPath .chezmoi.homeDir ".local/share/xwayland-satellite/.git" -}}
{{ $headPath := joinPath $gitDir "HEAD" -}}
{{ if (stat $headPath) -}}
  {{ $head := include $headPath | trim -}}
  {{ $sha := $head -}}
  {{ $branch := base (trim (trimPrefix "ref:" $head)) -}}
  {{ $refPath := joinPath $gitDir "refs" "heads" $branch -}}
  {{ if (stat $refPath) }}{{ $sha = include $refPath | trim }}{{ end -}}
print_info "building {{ $branch }} @ {{ $sha }}"
{{- else -}}
print_info "unable to determine git info for build"
{{- end }}

C_INCLUDE_FROM_GCC="$(gcc -print-file-name=include)"

if [[ -d "${C_INCLUDE_FROM_GCC}" ]]; then
  export C_INCLUDE_PATH="${C_INCLUDE_FROM_GCC}:${C_INCLUDE_PATH}"
else
  print_warn "C_INCLUDE_PATH not updated. ${C_INCLUDE_FROM_GCC} not found."
fi

print_info "C_INCLUDE_PATH: '${C_INCLUDE_PATH}'" 

if [[ -d "{{ .chezmoi.homeDir }}/.local/share/xwayland-satellite" ]]; then
    cd "{{ .chezmoi.homeDir }}/.local/share/xwayland-satellite"
    cargo build --release

    print_warn "killing xwayland-satellite to install newly built version"
    killall xwayland-satellite || true
    cp target/release/xwayland-satellite "{{ .chezmoi.homeDir }}/.local/bin/"
else
    print_warn "xwayland-satellite clone not found, skipping build"
fi

# vi: ft=bash
